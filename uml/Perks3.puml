@startuml
class entities.player.perks.PrecisionStrikePerk {
+ <<Create>> PrecisionStrikePerk(Player,Tier)
+ boolean canUsePerk(Player)
+ void activatePerk(Player)
+ void deactivatePerk(Player)
+ void setStartValues(Tier)
}

class entities.player.perks.ReinforcedPerk {
+ <<Create>> ReinforcedPerk(Player,Tier)
+ boolean canUsePerk(Player)
+ void activatePerk(Player)
+ void deactivatePerk(Player)
+ void setStartValues(Tier)
}

class entities.player.perks.RapidFirePerk {
+ <<Create>> RapidFirePerk(Player,Tier)
+ boolean canUsePerk(Player)
+ void activatePerk(Player)
+ void deactivatePerk(Player)
+ void setStartValues(Tier)
}

class entities.player.perks.PerfectionistPerk {
+ <<Create>> PerfectionistPerk(Player,Tier)
+ boolean canUsePerk(Player)
+ void activatePerk(Player)
+ void deactivatePerk(Player)
+ void setStartValues(Tier)
}



entities.bases.BasePerk <|-- entities.player.perks.PrecisionStrikePerk
entities.bases.BasePerk <|-- entities.player.perks.ReinforcedPerk
entities.bases.BasePerk <|-- entities.player.perks.RapidFirePerk
entities.bases.BasePerk <|-- entities.player.perks.PerfectionistPerk
@enduml